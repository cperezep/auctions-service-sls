[{"/Users/crperz/Development/serverless/auctions-service/serverless.ts":"1","/Users/crperz/Development/serverless/auctions-service/src/functions/hello/handler.ts":"2","/Users/crperz/Development/serverless/auctions-service/src/functions/hello/index.ts":"3","/Users/crperz/Development/serverless/auctions-service/src/functions/hello/schema.ts":"4","/Users/crperz/Development/serverless/auctions-service/src/functions/index.ts":"5","/Users/crperz/Development/serverless/auctions-service/src/libs/apiGateway.ts":"6","/Users/crperz/Development/serverless/auctions-service/src/libs/lambda.ts":"7"},{"size":681,"mtime":1610077413640,"results":"8","hashOfConfig":"9"},{"size":580,"mtime":1610077635681,"results":"10","hashOfConfig":"9"},{"size":332,"mtime":1610077100216,"results":"11","hashOfConfig":"9"},{"size":120,"mtime":1610077100216,"results":"12","hashOfConfig":"9"},{"size":44,"mtime":1610076081138,"results":"13","hashOfConfig":"9"},{"size":521,"mtime":1610077627457,"results":"14","hashOfConfig":"9"},{"size":191,"mtime":1610077100216,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tookxa",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/Users/crperz/Development/serverless/auctions-service/serverless.ts",[],"/Users/crperz/Development/serverless/auctions-service/src/functions/hello/handler.ts",[],"/Users/crperz/Development/serverless/auctions-service/src/functions/hello/index.ts",[],"/Users/crperz/Development/serverless/auctions-service/src/functions/hello/schema.ts",[],"/Users/crperz/Development/serverless/auctions-service/src/functions/index.ts",[],"/Users/crperz/Development/serverless/auctions-service/src/libs/apiGateway.ts",["32"],"import type { APIGatewayProxyEvent, APIGatewayProxyResult, Handler } from 'aws-lambda';\nimport type { FromSchema } from 'json-schema-to-ts';\n\nexport type ValidatedAPIGatewayProxyEvent<S> = Omit<APIGatewayProxyEvent, 'body'> & { body: FromSchema<S> };\nexport type ValidatedEventAPIGatewayProxyEvent<S> = Handler<ValidatedAPIGatewayProxyEvent<S>, APIGatewayProxyResult>;\n\nexport const formatJSONResponse = (response: Record<string, unknown>) => {\n  return {\n    statusCode: 200,\n    body: JSON.stringify(response),\n  };\n};\n","/Users/crperz/Development/serverless/auctions-service/src/libs/lambda.ts",["33","34"],"import middy from '@middy/core';\nimport middyJsonBodyParser from '@middy/http-json-body-parser';\n\nexport const middyfy = (handler) => {\n  return middy(handler).use(middyJsonBodyParser());\n};\n",{"ruleId":"35","severity":1,"message":"36","line":7,"column":35,"nodeType":"37","messageId":"38","endLine":7,"endColumn":73},{"ruleId":"35","severity":1,"message":"36","line":4,"column":24,"nodeType":"37","messageId":"38","endLine":4,"endColumn":36},{"ruleId":"35","severity":1,"message":"39","line":4,"column":25,"nodeType":"40","messageId":"41","endLine":4,"endColumn":32},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'handler' should be typed.","Identifier","missingArgType"]